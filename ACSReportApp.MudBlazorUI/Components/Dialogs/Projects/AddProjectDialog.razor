@using ACSReportApp.Services.Contracts
@using ACSReportApp.Services.Models

@inject IProjectService ProjectService
@inject ISnackbar Snackbar

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.Save" Class="mr-3 mb-n1" />
            Update project data?
        </MudText>
    </TitleContent>

    <DialogContent>
        <MudTextField @bind-Value="Project.Number" Label="Project Number" ReadOnly="false" />
        <MudTextField @bind-Value="Project.Name" Label="Project Name" ReadOnly="false" />
        <MudTextField @bind-Value="Project.Contractor" Label="Project Contractor" ReadOnly="false" />
        <MudTextField @bind-Value="Project.Description" Label="Project Description" ReadOnly="false" />
    </DialogContent>

    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Success" Variant="Variant.Filled" OnClick="SaveChanges">Add Project</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; }

    private ProjectServiceModel Project { get; set; } = new ProjectServiceModel();

    private void Cancel() => MudDialog.Cancel();

    private async Task SaveChanges()
    {
        try
        {
            await ProjectService.CreateProjectAsync(Project);
            Snackbar.Add("Project was added to the database", Severity.Success);
            MudDialog.Close(DialogResult.Ok(true));
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Error adding project: {ex.Message}", Severity.Error);
        }
    }
}
