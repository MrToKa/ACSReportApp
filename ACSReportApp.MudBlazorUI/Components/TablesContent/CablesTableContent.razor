@using ACSReportApp.Services.Contracts
@using ACSReportApp.Services.Models
@using ACSReportApp.MudBlazorUI.Components.TablesContent
@using MudBlazor

@inject ICableService CableService

<MudDataGrid T="CableServiceModel" @ref="grid" Items="@CableLatestRevisions" ReadOnly=false
             Bordered="true" Outlined="true" Dense="true" Filterable="true" FilterMode="@DataGridFilterMode.ColumnFilterMenu"
             Virtualize="true" FixedHeader="true" Hover="true" RowStyleFunc="@StyleFunc" >
    <ToolBarContent>
        <MudText Typo="Typo.h6">Cables list</MudText>
        <MudSpacer />
    </ToolBarContent>
    <Columns>
        <CableColumns IsOldRevisionsTable="false" />
    </Columns>
    <ChildRowContent>
        @if (CableOldRevisions.Where(c => c.IsLastRevision == false && c.Tag == context.Item.Tag).Count() != 0)
        {
            <MudDataGrid T="CableServiceModel" Items="@CableOldRevisions.Where(c => c.IsLastRevision == false && c.Tag == context.Item.Tag)" ReadOnly=false
                         Bordered="true" Outlined="true" Dense="true" Filterable="true" FilterMode="@DataGridFilterMode.ColumnFilterMenu"
                         Virtualize="true" FixedHeader="true" Hover="true" RowStyleFunc="@StyleFunc">
                <ToolBarContent>
                    <MudText Typo="Typo.h6">Cables list</MudText>
                    <MudSpacer />
                </ToolBarContent>
                <Columns>
                    <CableColumns IsOldRevisionsTable="true" />
                </Columns>
            </MudDataGrid>
        }
        else
        {
            <MudText Typo="Typo.h6">No old revisions for this cable</MudText>
        }
    </ChildRowContent>
    <PagerContent>
        <MudDataGridPager T="CableServiceModel" />
    </PagerContent>
</MudDataGrid>

@code {
    [Parameter]
    public Guid ProjectId { get; set; }

    private List<CableServiceModel> ProjectCables = new List<CableServiceModel>();

    private List<CableServiceModel> CableOldRevisions = new List<CableServiceModel>();

    private List<CableServiceModel> CableLatestRevisions = new List<CableServiceModel>();

    public MudDataGrid<CableServiceModel> grid = null;

    protected override async Task OnInitializedAsync()
    {
        ProjectCables = await CableService.GetCablesByProjectIdAsync(ProjectId);

        CableOldRevisions = ProjectCables.Where(x => x.IsLastRevision == false)
        .OrderByDescending(x => x.Revision).ToList();

        CableLatestRevisions = ProjectCables.Where(x => x.IsLastRevision == true).ToList();
    }

    private string StyleFunc(CableServiceModel cable, int index)
    {
        return cable.IsDeleted ? "text-decoration: line-through;" : "";
    }
}