@page "/projects"

@using System.Net.Http.Json
@using ACSReportApp.MudBlazorUI.Components.Dialogs
@using ACSReportApp.Services
@using ACSReportApp.Services.Contracts
@using ACSReportApp.Services.Models

@inject IProjectService ProjectService
@inject IDialogService DialogService

<h3>Projects</h3>

<PageTitle>Projects</PageTitle>

<MudDataGrid T="ProjectServiceModel" Items="@Elements.Take(20)" ReadOnly=false EditMode="@(_isCellEditMode ? DataGridEditMode.Cell : DataGridEditMode.Form)"
             Bordered="true" Dense="true" EditTrigger="@(_editTriggerRowClick ? DataGridEditTrigger.OnRowClick : DataGridEditTrigger.Manual)">
    <Columns>
        <PropertyColumn Property="x => x.Number" Title="Number" Editable="false" />
        <PropertyColumn Property="x => x.Name" />
        <PropertyColumn Property="x => x.Description" />
        <PropertyColumn Property="x => x.DateCreated" />
        <TemplateColumn Hidden="@(_isCellEditMode || _editTriggerRowClick)" CellClass="d-flex justify-end">
            <CellTemplate>
                <MudIconButton Size="@Size.Small" Icon="@Icons.Material.Outlined.Edit" OnClick="@context.Actions.StartEditingItemAsync" />
            </CellTemplate>
        </TemplateColumn>
    </Columns>
</MudDataGrid>

<div class="d-flex flex-wrap mt-4">
    <div class="d-flex justify-start align-center">
        <p class="mud-typography mud-typography-body1 mud-inherit-text mr-2">Form</p>
        <MudSwitch @bind-Value="_isCellEditMode">Cell</MudSwitch>
    </div>
    <div class="d-flex justify-start align-center">
        <p class="mud-typography mud-typography-body1 mud-inherit-text mr-2">Manual</p>
        <MudSwitch @bind-Value="_editTriggerRowClick">On Row Click</MudSwitch>
    </div>
</div>

@code {
    private List<ProjectServiceModel> Elements = new List<ProjectServiceModel>();
    private bool _isCellEditMode;
    private bool _editTriggerRowClick;

    protected override async Task OnInitializedAsync()
    {
        Elements = await ProjectService.GetProjectsAsync();
    }

    private Task OpenDialogAsync()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true };

        return DialogService.ShowAsync<ProjectDialog>("Called dialog");
    }
}
